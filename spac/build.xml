<?xml version="1.0"?>

<project name="snova-spac" default="release">
	<property name="root" value="." />
		<property name="srcroot" value="${root}/src" />
		<property name="releasedir" value="${root}/release" />
		<property name="classes" value="${root}/build" />
		<property name="jar" value="spac.jar" />
		<property name="distroot" value="${root}/lib" />
		<property name="docdir" value="${root}/doc" />
		<property name="lib" value="${root}/lib" />
		<property name="etc" value="${root}/conf" />
		<property name="release" value="release" />
		<property name="version" value="0.12.0101" />
	    <property name="release_dir_name" value="spac" />
		<property name="project_name" value="snova-spac" />

		<target name="prepare">
			<mkdir dir="${classes}"/>
		</target>

		<target name="compile" depends="prepare">
			<javac debug="on" destdir="${classes}">
				<src path="${srcroot}" />
				<classpath>
					<fileset dir="${lib}">
						<include name="*.jar" />
					</fileset>
					<pathelement path="${root}/../framework/lib/framework.jar" />
					<pathelement path="${root}/../framework/lib/netty-3.1.5.GA.jar" />
					<pathelement path="${root}/../framework/lib/arch.jar" />
				</classpath>
			</javac>
		</target>

		<target name="jar" depends="compile">
			<jar destfile="${distroot}/${jar}" basedir="${classes}">
				<manifest>
					<attribute name="Version" value="${version}" />
				</manifest>
			</jar>
			<delete dir="${classes}" />
		</target>

		<target name="release" depends="jar">
			<property name="releaseprojectdir" value="${releasedir}/${release_dir_name}" />
			<mkdir dir="${releaseprojectdir}" />
			<copy todir="${releaseprojectdir}/lib">
				<fileset dir="${lib}">
					<include name="${jar}" />
					<include name="tykedog.jar" />
					<include name="antlr-runtime-3.2.jar" />
					<include name="commons-lang-2.4.jar" />
					<include name="jsocks.jar" />
				</fileset>
			</copy>
			<copy todir="${releaseprojectdir}/conf">
				<fileset dir="${etc}" />
			</copy>
			<copy todir="${releaseprojectdir}" file="${root}/plugin.xml" />
			<copy todir="${releaseprojectdir}" file="${root}/readme.txt" />
			<copy todir="${releaseprojectdir}" file="${root}/changelog.txt" />
			<copy todir="${releaseprojectdir}" file="${root}/licence.txt" />
			<zip destfile="${root}/${project_name}-${version}.zip" basedir="${releasedir}" />
			<delete dir="${releasedir}" />
		</target>
</project>
